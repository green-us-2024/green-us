// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class ActivityPointBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ImageView btnEsc;

  @NonNull
  public final ImageView btnFront;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView month;

  @NonNull
  public final Button pointWithdraw;

  @NonNull
  public final RecyclerView recyclerviewPoint;

  @NonNull
  public final TextView remainingPoint;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  @NonNull
  public final TextView year;

  private ActivityPointBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack,
      @NonNull ImageView btnEsc, @NonNull ImageView btnFront,
      @NonNull ConstraintLayout constraintLayout, @NonNull Guideline guideline1,
      @NonNull Guideline guideline2, @NonNull TextView month, @NonNull Button pointWithdraw,
      @NonNull RecyclerView recyclerviewPoint, @NonNull TextView remainingPoint,
      @NonNull TextView textView4, @NonNull View view, @NonNull View view2,
      @NonNull TextView year) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnEsc = btnEsc;
    this.btnFront = btnFront;
    this.constraintLayout = constraintLayout;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.month = month;
    this.pointWithdraw = pointWithdraw;
    this.recyclerviewPoint = recyclerviewPoint;
    this.remainingPoint = remainingPoint;
    this.textView4 = textView4;
    this.view = view;
    this.view2 = view2;
    this.year = year;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPointBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPointBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_point, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPointBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_esc;
      ImageView btnEsc = ViewBindings.findChildViewById(rootView, id);
      if (btnEsc == null) {
        break missingId;
      }

      id = R.id.btn_front;
      ImageView btnFront = ViewBindings.findChildViewById(rootView, id);
      if (btnFront == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.month;
      TextView month = ViewBindings.findChildViewById(rootView, id);
      if (month == null) {
        break missingId;
      }

      id = R.id.point_withdraw;
      Button pointWithdraw = ViewBindings.findChildViewById(rootView, id);
      if (pointWithdraw == null) {
        break missingId;
      }

      id = R.id.recyclerview_point;
      RecyclerView recyclerviewPoint = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewPoint == null) {
        break missingId;
      }

      id = R.id.remaining_point;
      TextView remainingPoint = ViewBindings.findChildViewById(rootView, id);
      if (remainingPoint == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.year;
      TextView year = ViewBindings.findChildViewById(rootView, id);
      if (year == null) {
        break missingId;
      }

      return new ActivityPointBinding((ConstraintLayout) rootView, btnBack, btnEsc, btnFront,
          constraintLayout, guideline1, guideline2, month, pointWithdraw, recyclerviewPoint,
          remainingPoint, textView4, view, view2, year);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
