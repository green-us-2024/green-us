// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class FragmentJoinAddressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnEsc;

  @NonNull
  public final Button btnSearchAddress;

  @NonNull
  public final Button btnToJoinComplt;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etAddressDetail;

  @NonNull
  public final EditText etName;

  private FragmentJoinAddressBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnEsc,
      @NonNull Button btnSearchAddress, @NonNull Button btnToJoinComplt,
      @NonNull EditText etAddress, @NonNull EditText etAddressDetail, @NonNull EditText etName) {
    this.rootView = rootView;
    this.btnEsc = btnEsc;
    this.btnSearchAddress = btnSearchAddress;
    this.btnToJoinComplt = btnToJoinComplt;
    this.etAddress = etAddress;
    this.etAddressDetail = etAddressDetail;
    this.etName = etName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentJoinAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentJoinAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_join_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentJoinAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_esc;
      ImageView btnEsc = ViewBindings.findChildViewById(rootView, id);
      if (btnEsc == null) {
        break missingId;
      }

      id = R.id.btn_search_address;
      Button btnSearchAddress = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchAddress == null) {
        break missingId;
      }

      id = R.id.btn_to_join_complt;
      Button btnToJoinComplt = ViewBindings.findChildViewById(rootView, id);
      if (btnToJoinComplt == null) {
        break missingId;
      }

      id = R.id.et_address;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.et_address_detail;
      EditText etAddressDetail = ViewBindings.findChildViewById(rootView, id);
      if (etAddressDetail == null) {
        break missingId;
      }

      id = R.id.et_name;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      return new FragmentJoinAddressBinding((ConstraintLayout) rootView, btnEsc, btnSearchAddress,
          btnToJoinComplt, etAddress, etAddressDetail, etName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
