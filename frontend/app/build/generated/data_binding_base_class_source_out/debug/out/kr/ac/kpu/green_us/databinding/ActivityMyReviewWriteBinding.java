// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class ActivityMyReviewWriteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnEsc;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText editText;

  @NonNull
  public final TextView greenName;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView textNum;

  @NonNull
  public final Button writeReviewBtn;

  private ActivityMyReviewWriteBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnEsc, @NonNull ConstraintLayout constraintLayout,
      @NonNull EditText editText, @NonNull TextView greenName, @NonNull Guideline guideline1,
      @NonNull Guideline guideline2, @NonNull TextView textNum, @NonNull Button writeReviewBtn) {
    this.rootView = rootView;
    this.btnEsc = btnEsc;
    this.constraintLayout = constraintLayout;
    this.editText = editText;
    this.greenName = greenName;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.textNum = textNum;
    this.writeReviewBtn = writeReviewBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyReviewWriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyReviewWriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_review_write, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyReviewWriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_esc;
      ImageView btnEsc = ViewBindings.findChildViewById(rootView, id);
      if (btnEsc == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.editText;
      EditText editText = ViewBindings.findChildViewById(rootView, id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.green_name;
      TextView greenName = ViewBindings.findChildViewById(rootView, id);
      if (greenName == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.text_num;
      TextView textNum = ViewBindings.findChildViewById(rootView, id);
      if (textNum == null) {
        break missingId;
      }

      id = R.id.write_review_btn;
      Button writeReviewBtn = ViewBindings.findChildViewById(rootView, id);
      if (writeReviewBtn == null) {
        break missingId;
      }

      return new ActivityMyReviewWriteBinding((ConstraintLayout) rootView, btnEsc, constraintLayout,
          editText, greenName, guideline1, guideline2, textNum, writeReviewBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
