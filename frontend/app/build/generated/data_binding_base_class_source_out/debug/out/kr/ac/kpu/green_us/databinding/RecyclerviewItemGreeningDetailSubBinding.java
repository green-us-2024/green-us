// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class RecyclerviewItemGreeningDetailSubBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView feeInfo;

  @NonNull
  public final TextView greeningTitle;

  @NonNull
  public final ImageView imgGreening;

  @NonNull
  public final ConstraintLayout layoutMainInfo;

  @NonNull
  public final TextView tagCertifi;

  @NonNull
  public final TextView tagFreq;

  @NonNull
  public final TextView tagTerm;

  @NonNull
  public final TextView tvParticipateFee;

  @NonNull
  public final TextView tvStartDate;

  private RecyclerviewItemGreeningDetailSubBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView feeInfo, @NonNull TextView greeningTitle, @NonNull ImageView imgGreening,
      @NonNull ConstraintLayout layoutMainInfo, @NonNull TextView tagCertifi,
      @NonNull TextView tagFreq, @NonNull TextView tagTerm, @NonNull TextView tvParticipateFee,
      @NonNull TextView tvStartDate) {
    this.rootView = rootView;
    this.feeInfo = feeInfo;
    this.greeningTitle = greeningTitle;
    this.imgGreening = imgGreening;
    this.layoutMainInfo = layoutMainInfo;
    this.tagCertifi = tagCertifi;
    this.tagFreq = tagFreq;
    this.tagTerm = tagTerm;
    this.tvParticipateFee = tvParticipateFee;
    this.tvStartDate = tvStartDate;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerviewItemGreeningDetailSubBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerviewItemGreeningDetailSubBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclerview_item_greening_detail_sub, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerviewItemGreeningDetailSubBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feeInfo;
      TextView feeInfo = ViewBindings.findChildViewById(rootView, id);
      if (feeInfo == null) {
        break missingId;
      }

      id = R.id.greening_title;
      TextView greeningTitle = ViewBindings.findChildViewById(rootView, id);
      if (greeningTitle == null) {
        break missingId;
      }

      id = R.id.img_greening;
      ImageView imgGreening = ViewBindings.findChildViewById(rootView, id);
      if (imgGreening == null) {
        break missingId;
      }

      id = R.id.layout_main_info;
      ConstraintLayout layoutMainInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutMainInfo == null) {
        break missingId;
      }

      id = R.id.tag_certifi;
      TextView tagCertifi = ViewBindings.findChildViewById(rootView, id);
      if (tagCertifi == null) {
        break missingId;
      }

      id = R.id.tag_freq;
      TextView tagFreq = ViewBindings.findChildViewById(rootView, id);
      if (tagFreq == null) {
        break missingId;
      }

      id = R.id.tag_term;
      TextView tagTerm = ViewBindings.findChildViewById(rootView, id);
      if (tagTerm == null) {
        break missingId;
      }

      id = R.id.tv_participate_fee;
      TextView tvParticipateFee = ViewBindings.findChildViewById(rootView, id);
      if (tvParticipateFee == null) {
        break missingId;
      }

      id = R.id.tv_start_date;
      TextView tvStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tvStartDate == null) {
        break missingId;
      }

      return new RecyclerviewItemGreeningDetailSubBinding((NestedScrollView) rootView, feeInfo,
          greeningTitle, imgGreening, layoutMainInfo, tagCertifi, tagFreq, tagTerm,
          tvParticipateFee, tvStartDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
