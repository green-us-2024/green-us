// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class FragmentJoin1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnEsc;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etPw;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvPw;

  private FragmentJoin1Binding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnEsc,
      @NonNull Button btnNext, @NonNull EditText etEmail, @NonNull EditText etPw,
      @NonNull TextView tvEmail, @NonNull TextView tvPw) {
    this.rootView = rootView;
    this.btnEsc = btnEsc;
    this.btnNext = btnNext;
    this.etEmail = etEmail;
    this.etPw = etPw;
    this.tvEmail = tvEmail;
    this.tvPw = tvPw;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentJoin1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentJoin1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_join1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentJoin1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_esc;
      ImageView btnEsc = ViewBindings.findChildViewById(rootView, id);
      if (btnEsc == null) {
        break missingId;
      }

      id = R.id.btn_next;
      Button btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.et_email;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_pw;
      EditText etPw = ViewBindings.findChildViewById(rootView, id);
      if (etPw == null) {
        break missingId;
      }

      id = R.id.tv_email;
      TextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tv_pw;
      TextView tvPw = ViewBindings.findChildViewById(rootView, id);
      if (tvPw == null) {
        break missingId;
      }

      return new FragmentJoin1Binding((ConstraintLayout) rootView, btnEsc, btnNext, etEmail, etPw,
          tvEmail, tvPw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
