// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class CardviewPointBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView category;

  @NonNull
  public final TextView day;

  @NonNull
  public final TextView getPoint;

  @NonNull
  public final TextView greeningTitle;

  @NonNull
  public final CardView pointCardView;

  @NonNull
  public final TextView totalPoint;

  private CardviewPointBinding(@NonNull CardView rootView, @NonNull TextView category,
      @NonNull TextView day, @NonNull TextView getPoint, @NonNull TextView greeningTitle,
      @NonNull CardView pointCardView, @NonNull TextView totalPoint) {
    this.rootView = rootView;
    this.category = category;
    this.day = day;
    this.getPoint = getPoint;
    this.greeningTitle = greeningTitle;
    this.pointCardView = pointCardView;
    this.totalPoint = totalPoint;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardviewPointBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardviewPointBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cardview_point, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardviewPointBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.day;
      TextView day = ViewBindings.findChildViewById(rootView, id);
      if (day == null) {
        break missingId;
      }

      id = R.id.get_point;
      TextView getPoint = ViewBindings.findChildViewById(rootView, id);
      if (getPoint == null) {
        break missingId;
      }

      id = R.id.greening_title;
      TextView greeningTitle = ViewBindings.findChildViewById(rootView, id);
      if (greeningTitle == null) {
        break missingId;
      }

      CardView pointCardView = (CardView) rootView;

      id = R.id.total_point;
      TextView totalPoint = ViewBindings.findChildViewById(rootView, id);
      if (totalPoint == null) {
        break missingId;
      }

      return new CardviewPointBinding((CardView) rootView, category, day, getPoint, greeningTitle,
          pointCardView, totalPoint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
