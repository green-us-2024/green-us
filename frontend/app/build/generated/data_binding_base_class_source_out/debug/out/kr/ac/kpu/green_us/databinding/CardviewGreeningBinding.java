// Generated by view binder compiler. Do not edit!
package kr.ac.kpu.green_us.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kpu.green_us.R;

public final class CardviewGreeningBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ConstraintLayout cardContainer;

  @NonNull
  public final TextView greengTitle;

  @NonNull
  public final ImageView greeningImg;

  @NonNull
  public final TextView tagCertifi;

  @NonNull
  public final TextView tagFreq;

  @NonNull
  public final TextView tagTerm;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvUtil;

  private CardviewGreeningBinding(@NonNull CardView rootView,
      @NonNull ConstraintLayout cardContainer, @NonNull TextView greengTitle,
      @NonNull ImageView greeningImg, @NonNull TextView tagCertifi, @NonNull TextView tagFreq,
      @NonNull TextView tagTerm, @NonNull TextView tvTime, @NonNull TextView tvUtil) {
    this.rootView = rootView;
    this.cardContainer = cardContainer;
    this.greengTitle = greengTitle;
    this.greeningImg = greeningImg;
    this.tagCertifi = tagCertifi;
    this.tagFreq = tagFreq;
    this.tagTerm = tagTerm;
    this.tvTime = tvTime;
    this.tvUtil = tvUtil;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardviewGreeningBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardviewGreeningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cardview_greening, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardviewGreeningBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_container;
      ConstraintLayout cardContainer = ViewBindings.findChildViewById(rootView, id);
      if (cardContainer == null) {
        break missingId;
      }

      id = R.id.greeng_title;
      TextView greengTitle = ViewBindings.findChildViewById(rootView, id);
      if (greengTitle == null) {
        break missingId;
      }

      id = R.id.greening_img;
      ImageView greeningImg = ViewBindings.findChildViewById(rootView, id);
      if (greeningImg == null) {
        break missingId;
      }

      id = R.id.tag_certifi;
      TextView tagCertifi = ViewBindings.findChildViewById(rootView, id);
      if (tagCertifi == null) {
        break missingId;
      }

      id = R.id.tag_freq;
      TextView tagFreq = ViewBindings.findChildViewById(rootView, id);
      if (tagFreq == null) {
        break missingId;
      }

      id = R.id.tag_term;
      TextView tagTerm = ViewBindings.findChildViewById(rootView, id);
      if (tagTerm == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_util;
      TextView tvUtil = ViewBindings.findChildViewById(rootView, id);
      if (tvUtil == null) {
        break missingId;
      }

      return new CardviewGreeningBinding((CardView) rootView, cardContainer, greengTitle,
          greeningImg, tagCertifi, tagFreq, tagTerm, tvTime, tvUtil);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
